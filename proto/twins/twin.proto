syntax = "proto3";

import "google/protobuf/struct.proto";

package twin;

// The service definition.
service TwinService {
    rpc createTwin (createTwinRequest) returns (createTwinResponse);
    rpc getAllTwins (getAllTwinsRequest) returns (getAllTwinsResponse);
    rpc getBuildings (getBuildingsRequest) returns (getBuildingsResponse);
    rpc deleteBuilding (deleteBuildingRequest) returns (deleteBuildingResponse);
    rpc undoDeleteBuilding (undoDeleteBuildingRequest) returns (undoDeleteBuildingResponse);
}

//creating twin
message createTwinRequest {
    string name = 1;
    double latitude = 2;
    double longitude = 3;
    double radius = 4;
}
message createTwinResponse {
    //the ID is defined by the database (SERIAL type)
    int32 id = 1;
}

//get all twins
message twinObject {
    //the ID is defined by the database (SERIAL type)
    int32 id = 1;
    string name = 2;
    double latitude = 3;
    double longitude = 4;
    //radius in meters
    double radius = 5;
}
message getAllTwinsRequest {}
message getAllTwinsResponse {
    repeated twinObject twins = 1;
}

//get buildings for specific twin
message buildingObject {
    //the ID is defined by the database (SERIAL type)
    int32 id = 1;
    string street = 2;
    string house_number = 3;
    string postcode = 4;
    string city = 5;
    google.protobuf.Value coordinates = 6;
    bool visible = 7;
}

message getBuildingsRequest {
    //the ID is defined by the database (SERIAL type)
    int64 id = 1;
}
message getBuildingsResponse {
    repeated buildingObject buildings = 1;
}

//delete a building
message deleteBuildingRequest {
    //the ID is defined by the database (SERIAL type)
    int64 id = 1;
}
message deleteBuildingResponse {
    bool deleted = 1;
}


//restore a deleted building
message undoDeleteBuildingRequest {
    //the ID is defined by the database (SERIAL type)
    int64 id = 1;
}
message undoDeleteBuildingResponse {
    bool undone = 1;
}
